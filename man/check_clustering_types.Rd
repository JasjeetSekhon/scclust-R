% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{check_clustering_types}
\alias{check_clustering_types}
\title{Check the validity of a clustering with type constraints.}
\usage{
check_clustering_types(clustering, type_labels, type_size_constraints,
  total_size_constraint = NULL)
}
\arguments{
\item{clustering}{a \code{Rscc_clustering} object containing an existing non-empty clustering.}

\item{type_labels}{a factor or integer containing the type of each data point.}

\item{type_size_constraints}{a named vector containing the type specific size constraints.}

\item{total_size_constraint}{an integer with the required minimum cluster size. If \code{NULL},
only the type constraints will be checked.}
}
\value{
Returns \code{TRUE} if \code{clustering} satisfies the size constraints, and \code{FALSE}
        if it does not. Throws an error if \code{clustering} is an invalid clustering.
}
\description{
\code{check_clustering_types} checks so the inputted clustering satisfies the specified type
and overall size constraints.
}
\examples{
# Clustering
my_clust_obj <- Rscc_clustering(c(1, 1, 2, 3, 2, 3, 3, 1, 2, 2))

# Data point types
my_types <- factor(c("x", "y", "y", "z", "z", "x", "y", "z", "x", "x"))


# Check whether each cluster contains one point of each
# of type "x", "y" and "z".
check_clustering_types(my_clust_obj,
                       my_types,
                       c("x" = 1, "y" = 1, "z" = 1))
# > TRUE


# Check whether each cluster contains one point of each
# of type "x", "y" and "z" and at least three points in total.
check_clustering_types(my_clust_obj,
                       my_types,
                       c("x" = 1, "y" = 1, "z" = 1),
                       3)
# > TRUE


# Check whether each cluster contains five data points of type "y".
check_clustering_types(my_clust_obj,
                       my_types,
                       c("y" = 5))
# > FALSE


# Check whether each cluster contains one data point of
# both "x" and "z" and at least three points in total.
check_clustering_types(my_clust_obj,
                       my_types,
                       c("x" = 1, "z" = 1),
                       3)
# > TRUE


# Using integers as type labels.
my_int_types <- c(1L, 2L, 2L, 3L, 3L, 1L, 2L, 3L, 1L, 1L)
check_clustering_types(my_clust_obj,
                       my_int_types,
                       c("1" = 1, "2" = 1, "3" = 1))
# > TRUE

}
\seealso{
\code{\link{check_clustering}} checks only overall size constraints in cases where no
         type specific constraints exist. See \code{\link{make_clustering}} for details on
         how to specific type labels and constraints.
}

